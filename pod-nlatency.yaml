kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: custom-chaos-workflow-nf-1647299567
  namespace: litmus
  creationTimestamp: null
  labels:
    cluster_id: 515a2c29-d66a-49db-bb87-d2e695ff5fea
    subject: custom-chaos-workflow-nf_litmus
    workflow_id: 8af6dbf9-2a3a-4414-9b7e-062239877493
    workflows.argoproj.io/controller-instanceid: 515a2c29-d66a-49db-bb87-d2e695ff5fea
spec:
  templates:
    - name: custom-chaos
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: install-chaos-experiments
            template: install-chaos-experiments
            arguments: {}
        - - name: pod-network-latency
            template: pod-network-latency
            arguments: {}
        - - name: revert-chaos
            template: revert-chaos
            arguments: {}
    - name: install-chaos-experiments
      inputs:
        artifacts:
          - name: pod-network-latency
            path: /tmp/pod-network-latency.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects network latency on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-latency
                  labels:
                    name: pod-network-latency
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 2.4.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos/go-runner:2.4.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-latency
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: LIB_IMAGE
                        value: litmuschaos/go-runner:2.4.0
                      - name: TC_IMAGE
                        value: gaiadocker/iproute2
                      - name: NETWORK_LATENCY
                        value: "2000"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: LIB
                        value: litmus
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: docker
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: SOCKET_PATH
                        value: /var/run/docker.sock
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-network-latency
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 2.4.0
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/pod-network-latency.yaml -n
            {{workflow.parameters.adminModeNamespace}} |  sleep 30
        resources: {}
    - name: pod-network-latency
      inputs:
        artifacts:
          - name: pod-network-latency
            path: /tmp/chaosengine-pod-network-latency.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  generateName: pod-network-latency
                  labels:
                    instance_id: 26202e93-9588-473d-afe8-1fd6919ccd19
                    context: pod-network-latency_litmus
                    workflow_name: custom-chaos-workflow-nf-1647299567
                spec:
                  engineState: active
                  appinfo:
                    appns: ${params.appns}
                    applabel: app=nginx
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-latency
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: NETWORK_LATENCY
                              value: "2000"
                            - name: CONTAINER_RUNTIME
                              value: docker
                            - name: SOCKET_PATH
                              value: /var/run/docker.sock
                            - name: PODS_AFFECTED_PERC
                              value: ""
                        probe: []
                  annotationCheck: "false"
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: litmuschaos/litmus-checker:latest
        args:
          - -file=/tmp/chaosengine-pod-network-latency.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: revert-chaos
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - "kubectl delete chaosengine -l 'instance_id in
            (26202e93-9588-473d-afe8-1fd6919ccd19, )' -n
            {{workflow.parameters.adminModeNamespace}} "
        resources: {}
  entrypoint: custom-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
status:
  ? startedAt
  ? finishedAt
